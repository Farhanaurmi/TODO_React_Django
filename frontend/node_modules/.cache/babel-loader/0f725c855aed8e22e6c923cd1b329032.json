{"ast":null,"code":"import axios from 'axios';\nimport { TODO_CREATE_REQUEST, TODO_CREATE_SUCCESS, TODO_CREATE_FAIL, TODO_DETAILS_REQUEST, TODO_DETAILS_SUCCESS, TODO_DETAILS_FAIL, TODO_DELETE_REQUEST, TODO_DELETE_SUCCESS, TODO_DELETE_FAIL } from '../constants/todoConstants';\nexport const createTodo = todo => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TODO_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/todo/create`, todo, config);\n    dispatch({\n      type: TODO_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listTodoDetails = () => async dispatch => {\n  try {\n    dispatch({\n      type: TODO_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/todo`, todo, config);\n    dispatch({\n      type: TODO_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteTodo = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TODO_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/todo/delete/${id}`, config);\n    dispatch({\n      type: TODO_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/TODO_React_Django/frontend/src/actions/todoActions.js"],"names":["axios","TODO_CREATE_REQUEST","TODO_CREATE_SUCCESS","TODO_CREATE_FAIL","TODO_DETAILS_REQUEST","TODO_DETAILS_SUCCESS","TODO_DETAILS_FAIL","TODO_DELETE_REQUEST","TODO_DELETE_SUCCESS","TODO_DELETE_FAIL","createTodo","todo","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","detail","message","listTodoDetails","get","deleteTodo","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n\r\n    TODO_CREATE_REQUEST,\r\n    TODO_CREATE_SUCCESS,\r\n    TODO_CREATE_FAIL,\r\n\r\n    TODO_DETAILS_REQUEST,\r\n    TODO_DETAILS_SUCCESS,\r\n    TODO_DETAILS_FAIL,\r\n\r\n    TODO_DELETE_REQUEST,\r\n    TODO_DELETE_SUCCESS,\r\n    TODO_DELETE_FAIL,\r\n\r\n\r\n } from '../constants/todoConstants'\r\n \r\n\r\nexport const createTodo = (todo) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: TODO_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/todo/create`,\r\n            todo,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:TODO_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: TODO_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTodoDetails = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: TODO_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/todo`,\r\n            todo,\r\n            config\r\n            )\r\n\r\n        dispatch({ \r\n            type: TODO_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: TODO_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTodo = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: TODO_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/todo/delete/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:TODO_DELETE_SUCCESS\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: TODO_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}