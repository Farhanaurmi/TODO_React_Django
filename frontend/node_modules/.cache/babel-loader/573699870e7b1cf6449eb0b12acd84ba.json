{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { packageDetailsReducer, packageIdDetailsReducer, packageDeleteReducer, packageCreateReducer, packageUpdateReducer } from './reducers/packageReducer';\nimport { subscribeCreateReducer, subscribeDetailsReducer } from './reducers/subscribeReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  packageDetails: packageDetailsReducer,\n  packageIdDetails: packageIdDetailsReducer,\n  packageDelete: packageDeleteReducer,\n  packageCreate: packageCreateReducer,\n  packageUpdate: packageUpdateReducer,\n  subscribeCreate: subscribeCreateReducer,\n  subscribeDetails: subscribeDetailsReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst subInfoFromStorage = localStorage.getItem('subInfo') ? JSON.parse(localStorage.getItem('subInfo')) : {};\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  subscribeDetails: {\n    subInfo: subInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/TODO_React_Django/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","packageDetailsReducer","packageIdDetailsReducer","packageDeleteReducer","packageCreateReducer","packageUpdateReducer","subscribeCreateReducer","subscribeDetailsReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","packageDetails","packageIdDetails","packageDelete","packageCreate","packageUpdate","subscribeCreate","subscribeDetails","userInfoFromStorage","localStorage","getItem","JSON","parse","subInfoFromStorage","initialState","userInfo","subInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EACIC,mBADJ,EAEIC,kBAFJ,EAGIC,wBAHJ,QAGoC,yBAHpC;AAKA,SAASC,qBAAT,EACIC,uBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,QAIgC,2BAJhC;AAMA,SAASC,sBAAT,EACIC,uBADJ,QACoC,6BADpC;AAGA,MAAMC,OAAO,GAAGf,eAAe,CAAE;AAE7BgB,EAAAA,SAAS,EAAEZ,gBAFkB;AAG7Ba,EAAAA,YAAY,EAAEZ,mBAHe;AAI7Ba,EAAAA,WAAW,EAAEZ,kBAJgB;AAK7Ba,EAAAA,iBAAiB,EAAEZ,wBALU;AAO7Ba,EAAAA,cAAc,EAAEZ,qBAPa;AAQ7Ba,EAAAA,gBAAgB,EAAEZ,uBARW;AAS7Ba,EAAAA,aAAa,EAAEZ,oBATc;AAU7Ba,EAAAA,aAAa,EAAEZ,oBAVc;AAW7Ba,EAAAA,aAAa,EAAEZ,oBAXc;AAa7Ba,EAAAA,eAAe,EAAEZ,sBAbY;AAc7Ba,EAAAA,gBAAgB,EAAEZ;AAdW,CAAF,CAA/B;AAkBA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADoB,GAC2B,IADvD;AAGA,MAAMG,kBAAkB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,SAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADmB,GAC2B,EADtD;AAGA,MAAMI,YAAY,GAAG;AACjBjB,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEP;AAAZ,GADM;AAEjBD,EAAAA,gBAAgB,EAAG;AAAES,IAAAA,OAAO,EAAEH;AAAX;AAFF,CAArB;AAKA,MAAMI,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CAACgB,OAAD,EAASkB,YAAT,EAAsB9B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAAzC,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer } from './reducers/userReducers'\r\n\r\nimport { packageDetailsReducer,\r\n    packageIdDetailsReducer,\r\n    packageDeleteReducer,\r\n    packageCreateReducer,\r\n    packageUpdateReducer } from './reducers/packageReducer'\r\n\r\nimport { subscribeCreateReducer, \r\n    subscribeDetailsReducer, } from './reducers/subscribeReducer'\r\n\r\nconst reducer = combineReducers ({\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    packageDetails: packageDetailsReducer,\r\n    packageIdDetails: packageIdDetailsReducer,\r\n    packageDelete: packageDeleteReducer,\r\n    packageCreate: packageCreateReducer,\r\n    packageUpdate: packageUpdateReducer,\r\n\r\n    subscribeCreate: subscribeCreateReducer,\r\n    subscribeDetails: subscribeDetailsReducer,\r\n\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst subInfoFromStorage = localStorage.getItem('subInfo') ?\r\n        JSON.parse(localStorage.getItem('subInfo')) : {}\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n    subscribeDetails : { subInfo: subInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk] \r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}