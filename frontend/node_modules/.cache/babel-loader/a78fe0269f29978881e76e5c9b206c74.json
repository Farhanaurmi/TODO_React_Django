{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Urmi\\\\Desktop\\\\TODO_React_Django\\\\frontend\\\\src\\\\Screens\\\\ProfileViewScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, ListGroup, Button, Table } from 'react-bootstrap';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserDetails } from '../actions/userActions';\nimport { listSubscribeDetails } from '../actions/subscribeActions';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileViewScreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const subscribeDetails = useSelector(state => state.subscribeDetails);\n  const {\n    subs\n  } = subscribeDetails;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      dispatch(getUserDetails('profile'));\n      dispatch(listSubscribeDetails());\n    }\n  }, [dispatch, history, userInfo]);\n\n  const updateHandler = () => {\n    history.push('/user/update');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 28\n              }, this), user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              className: \"btn btn-block\",\n              onClick: updateHandler,\n              children: \"Update profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        className: \"justify-content-md-center text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Packages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PACKAGE TITLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PACKAGE PRICE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: subs.map(sub => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: sub.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: sub.isPaid ? sub.paidAt.substring(1, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: 'red'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: sub.packages.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, sub.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileViewScreen, \"XpksQMkoANIq2Ds4UGA3gM9fGe8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileViewScreen;\nexport default ProfileViewScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileViewScreen\");","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/TODO_React_Django/frontend/src/Screens/ProfileViewScreen.js"],"names":["React","useState","useEffect","Row","Col","ListGroup","Button","Table","Loader","Message","useDispatch","useSelector","getUserDetails","listSubscribeDetails","LinkContainer","ProfileViewScreen","history","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","subscribeDetails","subs","push","updateHandler","email","map","sub","id","isPaid","paidAt","substring","color","packages","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Button, Table } from 'react-bootstrap'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport { listSubscribeDetails } from '../actions/subscribeActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction ProfileViewScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const subscribeDetails = useSelector(state => state.subscribeDetails)\r\n    const {subs} = subscribeDetails\r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listSubscribeDetails())\r\n        }\r\n    }, [dispatch ,history, userInfo])\r\n\r\n    const updateHandler =()=>{\r\n        history.push('/user/update')\r\n    }\r\n\r\n\r\n    return (\r\n        <div><Row>\r\n                <Col md={5} >\r\n                    <h2>User Profile</h2>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <p><strong>Email: </strong>{user.email}</p>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                        type='button'\r\n                        className='btn btn-block'\r\n                        onClick={updateHandler}\r\n                        >\r\n                            Update profile\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={7} className=\"justify-content-md-center text-center\">\r\n                    <h2>Packages</h2>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>PAID</th>\r\n                            <th>PACKAGE TITLE</th>\r\n                            <th>PACKAGE PRICE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { subs.map(sub =>(\r\n                            <tr key={sub.id}>\r\n                                <td>{sub.id}</td>\r\n                                <td>{sub.isPaid ? \r\n                                ( sub.paidAt.substring(1,10) ) \r\n                                :(<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                }</td>\r\n                                <td>{sub.packages.title}</td>\r\n                                <td>{}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                    </Table>\r\n\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileViewScreen\r\n\r\n"]},"metadata":{},"sourceType":"module"}