{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Urmi\\\\Desktop\\\\TODO_React_Django\\\\frontend\\\\src\\\\Screens\\\\SubscribeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Package from '../Components/Package';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listPackageDetails } from '../actions/packageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SubscribeScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const packageDetails = useSelector(state => state.packageDetails);\n  const {\n    error,\n    loading,\n    packages\n  } = packageDetails;\n  useEffect(() => {\n    dispatch(listPackageDetails());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Packages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"secondary\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: packages.map(p => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Package, {\n          p: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubscribeScreen, \"YmKT5/Uv+Y7XTBEz0VjoeNC3x3o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SubscribeScreen;\nexport default SubscribeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribeScreen\");","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/TODO_React_Django/frontend/src/Screens/SubscribeScreen.js"],"names":["React","useEffect","Row","Col","Package","Loader","Message","useDispatch","useSelector","listPackageDetails","SubscribeScreen","dispatch","packageDetails","state","error","loading","packages","map","p","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AAEvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,cAAc,GAAGJ,WAAW,CAAEK,KAAK,IAAIA,KAAK,CAACD,cAAjB,CAAlC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA+BJ,cAArC;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMI,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACPD,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,WAAjB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL,QAAC,GAAD;AAAA,gBACAE,QAAQ,CAACC,GAAT,CAAaC,CAAC,iBACZ,QAAC,GAAD;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,CAAC,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAYA,CAAC,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AADA;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA3BQT,e;UAEYH,W,EACMC,W;;;KAHlBE,e;AA6BT,eAAeA,eAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Package from '../Components/Package'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listPackageDetails } from '../actions/packageActions'\r\n\r\nfunction SubscribeScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const packageDetails = useSelector( state => state.packageDetails )\r\n    const { error, loading, packages } = packageDetails\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(listPackageDetails())\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        <div>\r\n            <h1>All Packages</h1>\r\n            { loading ? <Loader/>\r\n            : error ? <Message variant='secondary'>{error}</Message>\r\n            : <Row>\r\n            { packages.map(p =>(\r\n                <Col key = {p.id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Package p={p}/>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscribeScreen\r\n"]},"metadata":{},"sourceType":"module"}